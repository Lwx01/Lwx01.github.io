<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客搭建</title>
    <url>/2023/04/30/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><p>​	Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<span id="more"></span></p>
<p>​	本篇文章参考<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a>编写。</p>
<p>​	<a href="https://hexo.io/zh-cn/">Hexo官网</a></p>
<h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>​	<a href="http://git-scm.com/">Git官网</a></p>
<p>​	window：<a href="https://git-scm.com/download/win">Git </a></p>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>​	<a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</p>
<p>​	Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/zh-cn/download/">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npmmirror.com/mirrors/node/">淘宝 Node.js 镜像</a> 下载。</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>​	所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>



<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>​	安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>​	新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<p>​	在<folder>该文件下运行命令，使用浏览器打开<a href="http://localhost:4000/%EF%BC%8C%E9%AA%8C%E8%AF%81%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F%E3%80%82">http://localhost:4000/，验证是否成功。</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>​	具体可查看<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a>。</p>
<h2 id="Github上部署"><a href="#Github上部署" class="headerlink" title="Github上部署"></a>Github上部署</h2><p>​	在 <code>_config.yml</code> 中添加以下配置（如果配置已经存在，请将其替换为如下）:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/&lt;username&gt;/&lt;project&gt;</span><br><span class="line">  # example, https://github.com/Lwx01/Lwx01.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<ol>
<li>执行 <code>hexo clean &amp;&amp; hexo deploy</code> 。</li>
<li>浏览 <code>&lt;GitHub 用户名&gt;.github.io</code> 检查你的网站能否运作。</li>
</ol>
<p>​	需要注意的是，建立名为 <code>&lt;repository 的名字&gt;</code> 的储存库，这样你的博客网址为 <code>&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;</code>，repository 的名字可以任意，例如 blog 或 hexo，但建议和为 <code>&lt;你的 GitHub 用户名&gt;</code>一样。</p>
<p>​	其他部署方式可查看<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a>。</p>
]]></content>
      <categories>
        <category>博客</category>
        <category>搭建</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker环境搭建</title>
    <url>/2023/05/18/Docker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>​	在CentOS-7下搭建Docker环境，参考官方文档 <a href="https://docs.docker.com/engine/install/centos/">Install Docker Engine on CentOS</a></p>
<h2 id="配置仓库"><a href="#配置仓库" class="headerlink" title="配置仓库"></a>配置仓库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils</span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>



<h2 id="安装Docker引擎"><a href="#安装Docker引擎" class="headerlink" title="安装Docker引擎"></a>安装Docker引擎</h2><h3 id="安装最新版本"><a href="#安装最新版本" class="headerlink" title="安装最新版本"></a>安装最新版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>



<h3 id="安装特定版本"><a href="#安装特定版本" class="headerlink" title="安装特定版本"></a>安装特定版本</h3><p>​	返回的列表取决于启用的存储库，并且是特定的 到你的 CentOS 版本（ <code>.el8</code> 在本例中由后缀指示）。</p>
<p>​	通过其完全限定的软件包名称安装特定版本，即 软件包名称 （<code>docker-ce</code>） 加上版本字符串（第 2 列）， 用连字符 （） 分隔<code>-</code>。例如，<code>docker-ce-3:23.0.5-1.el8</code>.</p>
<p>​	替换为 <code>&lt;VERSION_STRING&gt;</code> 所需版本，然后运行以下命令 要安装的命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>



<h2 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>



<h2 id="检验安装成功"><a href="#检验安装成功" class="headerlink" title="检验安装成功"></a>检验安装成功</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>

<p>​	此命令下载测试映像并在容器中运行它。当容器运行，它会打印确认消息并退出。</p>
<p>​	您现在已成功安装并启动 Docker 引擎。</p>
<h2 id="配置镜像加速器"><a href="#配置镜像加速器" class="headerlink" title="配置镜像加速器"></a>配置镜像加速器</h2><p>​	使用阿里云容器镜像服务，先创建个人实例，然后找到镜像工具中的镜像加速器：  <a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">容器镜像服务 (aliyun.com)</a> </p>
<p>​	针对Docker客户端版本大于 1.10.0 的用户</p>
<p>您可以通过修改daemon配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json来使用加速器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;加速器地址&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Docker</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>开篇</title>
    <url>/2023/04/29/%E5%BC%80%E7%AF%87/</url>
    <content><![CDATA[<p>​	测试文本。</p>
<p>搭建这个博客时，不出意外的出了点小意外。这个博客是为了记录点知识，当作笔记使用，虽然自己一直没有做笔记的习惯。</p>
<span id="more"></span>



]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ环境搭建</title>
    <url>/2023/05/07/RabbitMQ%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>​	在Centos7环境下搭建RabbitMQ，RabbitMQ是使用Erlang语言开发的，所以要先下载安装Erlang。</p>
<p>​	<span id="more"></span></p>
<h1 id="Erlang及RabbitMQ版本选择"><a href="#Erlang及RabbitMQ版本选择" class="headerlink" title="Erlang及RabbitMQ版本选择"></a>Erlang及RabbitMQ版本选择</h1><p>​	下载时需要注意版本的兼容性，<a href="https://www.rabbitmq.com/which-erlang.html">版本兼容说明</a></p>
<h2 id="Erlang下载"><a href="#Erlang下载" class="headerlink" title="Erlang下载"></a>Erlang下载</h2><p>​	<a href="https://www.erlang.org/downloads">Erlang下载</a></p>
<p>​	<a href="https://github.com/erlang/otp">Github:Erlang下载</a></p>
<p>​	Linux:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/erlang/otp/releases/download/OTP-25.1.1/otp_src_25.1.1.tar.gz</span><br></pre></td></tr></table></figure>

<p>​	说明 -C 选项是指定解压目录，如果不指定会解压到当前目录</p>
<h2 id="RabbitMQ下载"><a href="#RabbitMQ下载" class="headerlink" title="RabbitMQ下载"></a>RabbitMQ下载</h2><p>​	<a href="https://www.rabbitmq.com/versions.html">RabbitMQ下载</a></p>
<p>​	<a href="https://github.com/rabbitmq/rabbitmq-server">Github:RabbitMQ下载</a></p>
<p>​	Linux:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.11.15/rabbitmq-server-generic-unix-3.11.15.tar.xz</span><br></pre></td></tr></table></figure>

<p>​	这边Erlang选择的是25.1.1，RabbitMQ是3.11.15</p>
<h1 id="安装Erlang"><a href="#安装Erlang" class="headerlink" title="安装Erlang"></a>安装Erlang</h1><h2 id="安装erlang前先安装Linux依赖库"><a href="#安装erlang前先安装Linux依赖库" class="headerlink" title="安装erlang前先安装Linux依赖库"></a>安装erlang前先安装Linux依赖库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install make gcc gcc-c++ kernel-devel m4 ncurses-devel openssl-devel</span><br></pre></td></tr></table></figure>



<h2 id="解压erlang压缩包文件"><a href="#解压erlang压缩包文件" class="headerlink" title="解压erlang压缩包文件"></a>解压erlang压缩包文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf otp_src_25.1.1.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure>



<h2 id="配置、编译、安装"><a href="#配置、编译、安装" class="headerlink" title="配置、编译、安装"></a>配置、编译、安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/otp_src_25.1.1/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>



<h2 id="验证安装成功"><a href="#验证安装成功" class="headerlink" title="验证安装成功"></a>验证安装成功</h2><p>​	在命令行输入： erl  如果进入了编程命令行则表示安装成功，然后按ctrl + z 退出编程命令行；</p>
<h2 id="删除解压后文件夹"><a href="#删除解压后文件夹" class="headerlink" title="删除解压后文件夹"></a>删除解压后文件夹</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /usr/local/otp_src_25.1.1</span><br></pre></td></tr></table></figure>

<p>​	注：这个文件夹可删可不删</p>
<h1 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h1><h2 id="解压RabbitMQ压缩包文件"><a href="#解压RabbitMQ压缩包文件" class="headerlink" title="解压RabbitMQ压缩包文件"></a>解压RabbitMQ压缩包文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf rabbitmq-server-generic-unix-3.11.15.tar.xz  -C  /usr/local/</span><br></pre></td></tr></table></figure>

<p>​	解压RabbitMQ的压缩包，即安装完成，无需再编译</p>
<h2 id="启动RabbitMQ"><a href="#启动RabbitMQ" class="headerlink" title="启动RabbitMQ"></a>启动RabbitMQ</h2><p>​	切换到安装目录的sbin目录下: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/rabbitmq_server-3.11.15/sbin/</span><br><span class="line">./rabbitmq-server  -detached</span><br></pre></td></tr></table></figure>

<p>​	说明：-detached 表示在后台启动运行rabbitmq，不加该参数表示前台启动</p>
<h2 id="查看RabbitMQ的状态"><a href="#查看RabbitMQ的状态" class="headerlink" title="查看RabbitMQ的状态"></a>查看RabbitMQ的状态</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./rabbitmqctl -n rabbit status</span><br></pre></td></tr></table></figure>

<p>​	说明：-n rabbit 是指定节点名称为rabbit，目前只有一个节点，节点名默认为rabbit</p>
<p>​	此处-n rabbit 也可以省略</p>
<h2 id="停止RabbitMQ"><a href="#停止RabbitMQ" class="headerlink" title="停止RabbitMQ"></a>停止RabbitMQ</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./rabbitmqctl shutdown</span><br></pre></td></tr></table></figure>



<h2 id="配置path环境变量"><a href="#配置path环境变量" class="headerlink" title="配置path环境变量"></a>配置path环境变量</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>​	在文件中添加以下内容</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">RABBIT<span class="built_in">_</span>HOME=/usr/local/rabbitmq<span class="built_in">_</span>server-3.11.15</span><br><span class="line">PATH=<span class="built_in">$</span>PATH:<span class="built_in">$</span>RABBIT<span class="built_in">_</span>HOME/sbin</span><br><span class="line"></span><br><span class="line">export RABBIT<span class="built_in">_</span>HOME PATH</span><br></pre></td></tr></table></figure>

<p>​	刷新环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p>​	可在任意路径下运行sbin目录下的命令即成功</p>
<h1 id="延迟队列插件-rabbitmq-delayed-message-exchange"><a href="#延迟队列插件-rabbitmq-delayed-message-exchange" class="headerlink" title="延迟队列插件 rabbitmq-delayed-message-exchange"></a>延迟队列插件 rabbitmq-delayed-message-exchange</h1><h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><p>​	下载的版本应注意兼容性</p>
<p>​	<a href="http://www.rabbitmq.com/community-plugins.html">官网下载</a></p>
<p>​	Linux下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/rabbitmq_server-3.11.15/plugins/</span><br><span class="line"></span><br><span class="line">wget https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/3.11.1/rabbitmq_delayed_message_exchange-3.11.1.ez</span><br></pre></td></tr></table></figure>



<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip rabbitmq_delayed_message_exchange-3.11.1.ez</span><br></pre></td></tr></table></figure>

<p>​	如果unzip 没有安装，先安装一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install unzip -y</span><br></pre></td></tr></table></figure>

<p>​	说明：可以或不删除压缩包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> rabbitmq_delayed_message_exchange-3.11.1.ez</span><br></pre></td></tr></table></figure>



<h2 id="启用插件"><a href="#启用插件" class="headerlink" title="启用插件"></a>启用插件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_delayed_message_exchange</span><br></pre></td></tr></table></figure>



<h2 id="查询安装状况"><a href="#查询安装状况" class="headerlink" title="查询安装状况"></a>查询安装状况</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmq-plugins list</span><br></pre></td></tr></table></figure>



<h2 id="插件原理"><a href="#插件原理" class="headerlink" title="插件原理"></a>插件原理</h2><img src="/2023/05/07/RabbitMQ%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/01.png" class="" title="img">

<p>消息发送后不会直接投递到队列，而是存储到 Mnesia（嵌入式数据库），检查 x-delay 时间（消息头部）。</p>
<p>延迟插件在 RabbitMQ 3.5.7 及以上的版本才支持，依赖 Erlang&#x2F;OPT 18.0 及以上运行环境。</p>
]]></content>
      <categories>
        <category>RabbitMQ</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo图片显示问题</title>
    <url>/2023/05/15/Hexo%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="第一种解决方式"><a href="#第一种解决方式" class="headerlink" title="第一种解决方式"></a>第一种解决方式</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-image-link --save</span><br></pre></td></tr></table></figure>



<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>​	在 _config.yml 中启用<code>post_asset_folder: true</code>选项，将Markdown语法的图片路径转换为asset_img的方式，使图片能够在使用typora编辑和hexo预览发布时都能正常显示。</p>
<p>​	当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们</p>
<p>​	有关  <code>post_asset_folder</code>资源文件夹可查看	<a href="https://hexo.io/zh-cn/docs/asset-folders">资源文件夹 | Hexo</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>



<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>​	当创建一篇文章时，再 .&#x2F;source&#x2F;_posts&#x2F; 下会自动创建同名文件夹，引用图片链接为  <code>文件夹名称/image.jpg</code> </p>
<p>​	例如： <code>image.jpg</code> 位置为 <code>/foo/image.jpg</code> ，这表示它是 <code>/foo/</code> 文章的一张资源图片，引用该图片 <code>foo/image.jpg</code> </p>
<h2 id="第二种解决方式"><a href="#第二种解决方式" class="headerlink" title="第二种解决方式"></a>第二种解决方式</h2><p>​	将本地图片上传到Github、Gitee等网站，生成图片链接，然后再通过该链接引用图片。</p>
]]></content>
      <categories>
        <category>博客</category>
        <category>问题</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown语法</title>
    <url>/2023/04/29/MarkDown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line">以此类推，最多六级标题</span><br></pre></td></tr></table></figure>



<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">斜体：<span class="emphasis">*正文*</span>	或 <span class="emphasis">_正文_</span></span><br><span class="line">加粗：<span class="strong">**正文**</span> 或 <span class="strong">__正文__</span></span><br><span class="line">加粗斜体：<span class="strong">**<span class="emphasis">*正文*</span>**</span> 或 <span class="strong">__<span class="emphasis">_正文_</span>__</span></span><br><span class="line">标注：<span class="code">`&lt;正文&gt;`</span></span><br></pre></td></tr></table></figure>



<h2 id="删除线、下划线、分割线"><a href="#删除线、下划线、分割线" class="headerlink" title="删除线、下划线、分割线"></a>删除线、下划线、分割线</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">删除线：~~正文~~</span><br><span class="line">下划线：<span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>正文<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line">分割线：<span class="strong">*** 或者 ---</span></span><br></pre></td></tr></table></figure>



<h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 1</span></span><br><span class="line"><span class="quote">&gt; 2</span></span><br><span class="line"></span><br><span class="line">嵌套区块：</span><br><span class="line"><span class="quote">&gt; 1</span></span><br><span class="line">&gt;&gt; 1</span><br><span class="line">&gt;&gt;&gt; 1</span><br></pre></td></tr></table></figure>



<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 项目</span><br><span class="line"><span class="bullet">2.</span> 项目</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 项目</span><br><span class="line"><span class="bullet">	1.</span> 项目</span><br><span class="line"><span class="bullet">		1.</span> 项目</span><br></pre></td></tr></table></figure>



<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 项目</span><br><span class="line"><span class="bullet">-</span> 项目</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 项目</span><br><span class="line"><span class="bullet">	-</span> 项目</span><br><span class="line"><span class="bullet">		-</span> 项目</span><br><span class="line">可以通过* - + 开头</span><br></pre></td></tr></table></figure>



<h2 id="检查列表"><a href="#检查列表" class="headerlink" title="检查列表"></a>检查列表</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> [] 计划</span><br><span class="line"><span class="bullet">-</span> [x] 完成</span><br></pre></td></tr></table></figure>



<h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">在我后面添加注脚[^1]</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">我是注脚的具体内容</span></span><br></pre></td></tr></table></figure>



<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">一般链接：</span><br><span class="line">[<span class="string">链接名</span>](<span class="link">链接地址</span>)</span><br><span class="line"></span><br><span class="line">引用类型链接：</span><br><span class="line">[<span class="string">链接名</span>][<span class="symbol">引用名</span>]</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">[<span class="symbol">引用名</span>]: <span class="link">链接地址</span></span><br></pre></td></tr></table></figure>



<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">{% asset_img "span>" "<span class="string">label</span>" %}</span><br></pre></td></tr></table></figure>



<h2 id="键盘按键"><a href="#键盘按键" class="headerlink" title="键盘按键"></a>键盘按键</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>ctrl<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span> + <span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>c<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>效果：<kbd>ctrl</kbd> + <kbd>c</kbd></p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 字段1 | 字段2 | 字段3 |</span><br><span class="line">| :---  | :---: | ---: |</span><br><span class="line">|居左 | 居中 | 居右|</span><br><span class="line">|居左 | 居中 | 居右|</span><br><span class="line">|居左 | 居中 | 居右|</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">```java</span></span><br><span class="line"><span class="code">```</span>markdwon</span><br><span class="line"><span class="code">```代码语言</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>小记</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
</search>
